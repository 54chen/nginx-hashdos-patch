--- nginx-1.0.9/src/http/ngx_http_request_body.c	2011-09-30 22:36:19.000000000 +0800
+++ nginx-1.0.9-patch/src/http/ngx_http_request_body.c	2012-01-02 14:10:28.000000000 +0800
@@ -15,7 +15,7 @@
     ngx_chain_t *body);
 static ngx_int_t ngx_http_read_discarded_request_body(ngx_http_request_t *r);
 static ngx_int_t ngx_http_test_expect(ngx_http_request_t *r);
-
+int body_param_count(ngx_http_request_body_t *rb);
 
 /*
  * on completion ngx_http_read_client_request_body() adds to
@@ -150,6 +150,24 @@
                     return NGX_HTTP_INTERNAL_SERVER_ERROR;
                 }
             }
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
+                      "chen log----------------->content length: %uz", r->headers_in.content_length_n);
+    if(rb->buf){
+        int param_count = body_param_count(rb);
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
+                       "chen log--------------------------param count is %d", param_count);
+        ngx_log_debug2(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
+                   "chen log----------------------------body content: \"%*s\"", rb->bufs->buf->last - rb->bufs->buf->pos, rb->bufs->buf->pos);
+        if(param_count > 1000){
+            ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
+                      "client intended to send too large body: %O bytes, body size: %d",
+                      r->headers_in.content_length_n,param_count);
+
+            (void) ngx_http_discard_request_body(r);
+            ngx_http_finalize_request(r, NGX_HTTP_REQUEST_ENTITY_TOO_LARGE);
+            return NGX_OK;
+        }
+    }
 
             post_handler(r);
 
@@ -378,6 +396,22 @@
         rb->bufs = rb->bufs->next;
     }
 
+    if(rb->bufs->buf){
+	int param_count = body_param_count(rb);
+        ngx_log_debug1(NGX_LOG_DEBUG_HTTP, c->log, 0,
+                       "chen log--------------------------param count is %d", param_count);
+
+        if(param_count > 1000){
+	    ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
+                      "chena log in rb->bfs -> client intended to send too large body: %O bytes, body size: %d",
+                      r->headers_in.content_length_n,param_count);
+
+            (void) ngx_http_discard_request_body(r);
+            ngx_http_finalize_request(r, NGX_HTTP_REQUEST_ENTITY_TOO_LARGE);
+            return NGX_OK;
+        }
+    }
+
     r->read_event_handler = ngx_http_block_reading;
 
     rb->post_handler(r);
@@ -385,6 +419,25 @@
     return NGX_OK;
 }
 
+int
+body_param_count(ngx_http_request_body_t *rb){
+    u_char ch,*p;
+    int xxxx;
+    xxxx = 0;
+    ngx_buf_t *b = rb->bufs->buf;
+    if(rb->bufs->next){
+        b = rb->bufs->next->buf;
+    }
+
+    for (p = b->pos; p < b->last; p++){
+        ch = *p;
+        if(ch == '&'){
+            xxxx=xxxx+1;  
+        }
+    }
+    return xxxx+1;
+}
+
 
 static ngx_int_t
 ngx_http_write_request_body(ngx_http_request_t *r, ngx_chain_t *body)
